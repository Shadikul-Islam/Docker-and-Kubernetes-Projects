=========================
  Steps for Preparing
=========================
1. Create index lifecycle policy (Manually from Kibana or from the dev tool)
2. Create an Index Template (From the Kibana Dev Tool)
3. Add Alias in Existing Index (From the Kibana Dev Tool)


=================
  Special Notes
=================
1. In the Index Lifecycle Policy, the Maximum Age should be at least 10 minutes and the Delete Age can be 0ms for testing purposes.
2. Need to change in logstash.conf file, like:
3. The ILM Policy Name can be copied from logstash.conf file.
4. The ILM Policy Name will be the same in logstash.conf file and Index Template file.
5. The Alias name will be the same in logstash.conf file, Index Template file, and new index creation or existing index alias add time.


=====================
  Name Declaration
=====================
In this example, the names are:
1. Index Name: applog-2023.09.15-000001 - Like this format.
2. Index Policy Name: applog-ilm-policy
3. Index Template Name: applog-index-template
4. Alias Name: applog


==================
  How ILM Work
==================
In the below applog-ilm-policy sample file we can see that:
1. "hot": "min_age": "0ms" - That means,  there is no minimum age requirement for the "hot" phase. In other words, the "hot" phase can be applied immediately after index creation. If "min_age": "10m" then after 10 minutes of index creation "hot" phase will be applied.
2. "rollover": "max_age": "50m" - After 50 minutes in the "hot" phase the index will be rollover and create a new index. Data will be stored in that new index.
3. "delete": "min_age": "0ms" - When rollover is done then immediately delete that previous index. If "min_age": "10m" then after 10 minutes of rollover index will be deleted.

N.B: The important thing is that ILM takes 10-15 minutes extra time with the provided time to take any action. That means:
 - In hot phase rollover max_age = 50 minutes then it will rollover after 60-65 minutes.
 - In the delete phase, delete min_age = 0ms then it will take an extra 10-15 minutes to delete the index.
So the main fact is Elasticsearch will take an extra 10-15 minutes to take action on any of the phase activities.


==========================
  Create ILM Policy
==========================
It can be created from the Kibana Index Lifecycle Policies option. But Also can be created from the Kibana dev tool.

PUT _ilm/policy/applog-ilm-policy
{
  "policy": {
    "phases": {
      "hot": {
        "min_age": "0ms",
        "actions": {
          "set_priority": {
            "priority": 100
          },
          "rollover": {
            "max_age": "50m"
          }
        }
      },
      "delete": {
        "min_age": "0ms",
        "actions": {
          "delete": {
            "delete_searchable_snapshot": true
          }
        }
      }
    }
  }
}


==========================
  Create Index Template
==========================

PUT _index_template/applog-index-template
{
  "template": {
    "settings": {
      "index": {
        "lifecycle": {
          "name": "applog-ilm-policy", 
          "rollover_alias": "applog"
        }
      }
    }
  },
  "index_patterns": [
    "applog-*"
  ]
}


=================================
  Add Alias in Existing Index
=================================

POST /_aliases
{
  "actions": [
    {
      "add": {
        "index": "Index-Name",
        "alias": "applog",
        "is_write_index": true
      }
    }
  ]
}


=================================
  Create New Index with Alias
=================================

PUT Index-Name
{
  "aliases": {
    "applog": {
      "is_write_index": true
    }
  }
}


========================
  Delete ILM Policy
========================

DELETE /_ilm/policy/applog-ilm-policy


==========================
  Delete Index Template
==========================

DELETE /_index_template/applog-index-template


=================
  Delete Alias
=================

DELETE /Index-Name/_alias/applog

